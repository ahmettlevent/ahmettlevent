{"version":3,"sources":["static/img/pp.jpg","serviceWorker.js","redux/reducers/initialStates.js","redux/reducers/index.js","redux/reducers/reposReducer.js","redux/actions/actionTypes.js","redux/reducers/repoLangsReducer.js","components/userCard/UserCard.js","redux/actions/githubActions.js","components/githubCard/GithubCard.js","components/aboutCard/AboutCard.js","components/toolbox/updownButton/UpDownButton.js","components/root/landingPage/LandingPage.js","components/root/app/App.js","index.js","redux/reducers/configureStore.js"],"names":["module","exports","Boolean","window","location","hostname","match","gitRepos","gitRepoLanguages","rootReducer","combineReducers","reposReducer","state","initialStates","action","type","payload","repoLangsReducer","UserCard","navImage","backgroundImage","pp","id","className","style","rel","target","href","Component","getRepos","username","dispatch","a","url","fetch","res","json","res_1","getLangs","repos","langsList","repo","languages_url","then","push","langs","GithubCard","this","getProps","props","actions","length","map","langsRepo","key","color","Object","entries","language","html_url","name","description","langugesBar","connect","bindActionCreators","githubActions","AboutCard","UpDownButton","scrollPose","setInterval","setState","pageYOffset","clearInterval","interval","LandingPage","App","isLoading","timerHandle","setTimeout","clearTimeout","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8372a60f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pp.c53b810d.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\r\n  gitRepos: [],\r\n  gitRepoLanguages: [],\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport reposReducer from \"./reposReducer\";\r\nimport repoLangsReducer from \"./repoLangsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  reposReducer,\r\n  repoLangsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import initialStates from \"./initialStates\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nexport default function reposReducer(state = initialStates.gitRepos, action) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_REPOS_SUCCESS:\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const GET_REPOS_SUCCESS = \"GET_REPOS_SUCCESS\"\r\nexport const GET_LANGUAGE_SUCCESS = \"GET_LANGUAGE_SUCCESS\"\r\n","import initialStates from \"./initialStates\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nexport default function repoLangsReducer(\r\n  state = initialStates.gitRepoLanguages,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_LANGUAGE_SUCCESS:\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./UserCard.css\";\r\nimport pp from \"../../static/img/pp.jpg\";\r\n\r\nexport default class UserCard extends Component {\r\n  render() {\r\n    const navImage = {\r\n      backgroundImage: `url(${pp})`,\r\n    };\r\n    return (\r\n      <div id=\"profile\" className=\"ProfileCart\">\r\n        <div className=\"navImage\" style={navImage}></div>\r\n        <h1 className=\"navName\">Ahmet Utku Levent</h1>\r\n        <ul className=\"navList\">\r\n          <li className=\"navList-item\">\r\n            <a\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://github.com/ahmettlevent\"\r\n            >\r\n              Github\r\n            </a>\r\n          </li>\r\n          <li className=\"navList-item\">\r\n            <a href=\"#about\">About</a>\r\n          </li>\r\n          <li className=\"navList-item\">\r\n            <a\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://www.linkedin.com/in/ahmettlevent-48b831198/\"\r\n            >\r\n              LinkedIn\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function getReposSuccess(repos) {\r\n  return {\r\n    type: actionTypes.GET_REPOS_SUCCESS,\r\n    payload: repos,\r\n  };\r\n}\r\n\r\nexport function getLangSuccess(langs) {\r\n  return {\r\n    type: actionTypes.GET_LANGUAGE_SUCCESS,\r\n    payload: langs,\r\n  };\r\n}\r\n\r\nexport function getRepos(username) {\r\n  return async function (dispatch) {\r\n    let url = `https://api.github.com/users/${username}/repos`;\r\n    const res = await fetch(url);\r\n    const res_1 = await res.json();\r\n    return dispatch(getReposSuccess(res_1));\r\n  };\r\n}\r\n\r\nexport function getLangs(repos) {\r\n  return async function (dispatch) {\r\n    let langsList = [];\r\n\r\n    for (const repo of repos) {\r\n      await fetch(repo.languages_url)\r\n        .then((res) => res.json())\r\n        .then((res) => langsList.push({ id: repo.id, langs: res }));\r\n    }\r\n\r\n    return dispatch(getLangSuccess(langsList));\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport \"./GithubCard.css\";\r\nimport * as githubActions from \"../../redux/actions/githubActions\";\r\n\r\nclass GithubCard extends Component {\r\n  componentDidMount() {\r\n    this.getProps();\r\n  }\r\n\r\n  async getProps() {\r\n    await this.props.actions.getRepos(\"ahmettlevent\");\r\n\r\n    if (this.props.gitRepos.length < 0) return;\r\n\r\n    this.props.actions.getLangs(this.props.gitRepos);\r\n  }\r\n\r\n  langugesBar(repo) {\r\n    return (\r\n      <div>\r\n        {this.props.gitRepoLanguages.map((langsRepo) =>\r\n          langsRepo.id === repo.id ? (\r\n            <ul key={langsRepo.id} className=\"langs-list\">\r\n              <li style={{ color: \"rgb(200,200,220)\" }}>Dil-Puan : </li>\r\n              {Object.entries(langsRepo.langs).map((language) => (\r\n                <li key={language[1]} className=\"langs-list-item\">\r\n                  {language[0]} - {language[1]}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"github\" className=\"GitHub-Container\">\r\n        <span className=\"Github-nm\">Github Repos</span>\r\n\r\n        <div className=\"GithubRepos-Container\">\r\n          <ul className=\"GithubReposList\">\r\n            {this.props.gitRepos.map((repo) => (\r\n              <li key={repo.id} className=\"GithubRepoListItem\">\r\n                <div className=\"GithubRepo\">\r\n                  <div className=\"ct-des-name\">\r\n                    <div className=\"repoName\">\r\n                      <a\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                        href={repo.html_url}\r\n                      >\r\n                        {repo.name}\r\n                        &nbsp; &nbsp;\r\n                        <i className=\"fas fa-external-link-alt\"></i>\r\n                      </a>\r\n                    </div>\r\n                    <div className=\"repoDescription\">\r\n                      <p>\r\n                        {repo.description != null\r\n                          ? repo.description\r\n                          : repo.name === \"ahmettlevent\"\r\n                          ? \"Profil Reposu\"\r\n                          : \"Bu repoda Açıklama Bulunmamaktadır\"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"ct-langs\">{this.langugesBar(repo)}</div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    gitRepos: state.reposReducer,\r\n    gitRepoLanguages: state.repoLangsReducer,\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getRepos: bindActionCreators(githubActions.getRepos, dispatch),\r\n      getLangs: bindActionCreators(githubActions.getLangs, dispatch),\r\n    },\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GithubCard);\r\n","import React, { Component } from \"react\";\r\nimport \"./AboutCard.css\";\r\n\r\nexport default class AboutCard extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"about\" className=\"AboutCard-Container\">\r\n        <div className=\"bg-clevelandImage\"></div>\r\n        <span className=\"AboutCard-nm\">About Me</span>\r\n        <div className=\"AboutMe-Container\">\r\n          <h1 className=\"AboutMe-P\">\r\n            Adım : Ahmet Utku Levent (19) :P\r\n            <br /> <br />\r\n            <br />\r\n            Bu kısımda Artistik Yazılımla Alâkalı bi söz olucak şimdilik boş :(\r\n            <br />\r\n            <br />\r\n            İlgilendiğim Framework, Kütüphane ve Diller ;\r\n            <br />\r\n            <br />\r\n            Python (Flask - Tkiner -{\" \"}\r\n            <span className=\"soonDiv\">\r\n              Django <span className=\"soonTag\">soon</span>\r\n            </span>{\" \"}\r\n            - Selenium)\r\n            <br />\r\n            HTML5 + CSS3 <br />\r\n            JavaScript ES7,ES6 {\"->\"} (ExpressJs - ReactJs)\r\n            <br />\r\n            MVC - OOP - REST <br />\r\n            Unity\r\n            <br />\r\n            <br />\r\n            <br />\r\n            (Alâkalı Projeler{\" \"}\r\n            <a\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              className=\"githubLink\"\r\n              href=\"https://github.com/ahmettlevent\"\r\n            >\r\n              Github\r\n            </a>{\" \"}\r\n            Hesabımda Mevcut)\r\n            <span className=\"schoolInfo\">\r\n              <span>\r\n                Üniversite : İstinye Üniversitesi <br />\r\n                Bölüm : Yazılım Mühendisliği - 2.Sınıf\r\n              </span>\r\n            </span>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./UpDownButton.css\";\r\n\r\nexport default class UpDownButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { scrollPose: 0 };\r\n  }\r\n  componentDidMount() {\r\n    setInterval(() => this.setState({ scrollPose: window.pageYOffset }), 10);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a\r\n          className=\"goTo goToFirst\"\r\n          href={this.state.scrollPose >= 1300 ? \"#about\" : \"#profile\"}\r\n        >\r\n          <i className=\"fas fa-chevron-up\"></i>\r\n        </a>\r\n        <a\r\n          className=\"goTo goToLast\"\r\n          href={this.state.scrollPose <= 400 ? \"#about\" : \"#github\"}\r\n        >\r\n          <i className=\"fas fa-chevron-down\"></i>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./LandingPage.css\"\r\nimport UserCard from '../../userCard/UserCard';\r\nimport GithubCard from '../../githubCard/GithubCard';\r\nimport AboutCard from '../../aboutCard/AboutCard';\r\nimport UpDownButton from '../../toolbox/updownButton/UpDownButton';\r\n\r\nexport default class LandingPage extends Component {\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landingContainer\">\r\n        <UserCard></UserCard>\r\n        <AboutCard></AboutCard>\r\n        <GithubCard></GithubCard>\r\n\r\n        <UpDownButton></UpDownButton>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport LandingPage from '../landingPage/LandingPage';\n// import LoadingPage from '../../toolbox/loadingPage/LoadingPage'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: true };\n  }\n  componentDidMount() {\n    this.timerHandle = setTimeout(() => this.setState({ isLoading: false }), 3000);\n  }\n  componentWillUnmount() {\n    if (this.timerHandle) {\n      clearTimeout(this.timerHandle);\n      this.timerHandle = 0;\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div>\n          {/* {this.state.isLoading ? <LoadingPage /> : <LandingPage></LandingPage>} */}\n          <LandingPage></LandingPage>\n        </div>\n\n\n      </div >\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from \"./redux/reducers/configureStore\"\n\nimport './index.css';\nimport App from './components/root/app/App';\n\n\nconst store = configureStore();\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore() {\r\n  return createStore(rootReducer, applyMiddleware(thunk));\r\n}\r\n"],"sourceRoot":""}